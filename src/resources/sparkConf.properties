spark.migrate.beta                                              true

spark.migrate.source.host                                       localhost
spark.migrate.source.username                                   dQmpZXTqQPnHFjtPYSLtOpHp
spark.migrate.source.password                                   S9rcurwZ2S07h4+YK7xeo+0tIks5svlZwlI46a_h_saHYlx0AheHLgyZLApYvQp5CUMu-P2KP9Th27wF8Z4_BP9NhTx4WLi8tf-sZ04DKEyGavh.LJavrkdciZazxFnu


spark.migrate.astra.scb                                         file:///Users/ankitpatel/Documents/Astra/secure-connect-enterprise.zip
spark.migrate.astra.username                                    dQmpZXTqQPnHFjtPYSLtOpHp
spark.migrate.astra.password                                    S9rcurwZ2S07h4+YK7xeo+0tIks5svlZwlI46a_h_saHYlx0AheHLgyZLApYvQp5CUMu-P2KP9Th27wF8Z4_BP9NhTx4WLi8tf-sZ04DKEyGavh.LJavrkdciZazxFnu

spark.cassandra.source.read.consistency.level                   LOCAL_QUORUM
spark.cassandra.astra.read.consistency.level                    LOCAL_QUORUM


spark.migrate.maxRetries                                        10
spark.migrate.readRateLimit                                     40000
spark.migrate.writeRateLimit                                    40000
spark.migrate.splitSize                                         5
spark.migrate.batchSize                                         5

CREATE TABLE clair.cust_stats (
customer_key text,
year int,
month int,
day int,
summary_type text,
air_shuttle_count,android_app_count,bkg_guest_rating_count,bkg_guest_rating_total_x10,brand_count,business_center_count,casino_count,contribution_usd_x100,desktop_count,fitness_count,free_bkft_count,free_internet_count,free_intr_in_room_count,free_intr_pub_count,free_parking_count,friday_count,gym_count,handicap_fac_count,holiday_count,indoor_pool_count,ios_app_count,mweb_count,non_smoking_count,num_rooms_total,opq_count,other_amenities_count,other_app_count,outdoor_pool_count,pcln_guest_rating_count,pcln_guest_rating_total_x10,pets_allowed_count,price_count,price_total_x100,restaurant_count,rtl_count,saturday_count,sopq_count,spa_count,star_rating_total_x10,total_count

PRIMARY KEY ((customer_key, year), month, day, summary_type)

air_shuttle_count,android_app_count,bkg_guest_rating_count,bkg_guest_rating_total_x10,brand_count,business_center_count,casino_count,contribution_usd_x100,desktop_count,fitness_count,free_bkft_count,free_internet_count,free_intr_in_room_count,free_intr_pub_count,free_parking_count,friday_count,gym_count,handicap_fac_count,holiday_count,indoor_pool_count,ios_app_count,mweb_count,non_smoking_count,num_rooms_total,opq_count,other_amenities_count,other_app_count,outdoor_pool_count,pcln_guest_rating_count,pcln_guest_rating_total_x10,pets_allowed_count,price_count,price_total_x100,restaurant_count,rtl_count,saturday_count,sopq_count,spa_count,star_rating_total_x10,total_count

spark.migrate.source.keyspaceTable                              clair.cust_stats
spark.migrate.astra.keyspaceTable                               clair.cust_stats

spark.migrate.query.cols.select                                 customer_key, year, month, day, summary_type,air_shuttle_count,android_app_count,bkg_guest_rating_count,bkg_guest_rating_total_x10,brand_count,business_center_count,casino_count,contribution_usd_x100,desktop_count,fitness_count,free_bkft_count,free_internet_count,free_intr_in_room_count,free_intr_pub_count,free_parking_count,friday_count,gym_count,handicap_fac_count,holiday_count,indoor_pool_count,ios_app_count,mweb_count,non_smoking_count,num_rooms_total,opq_count,other_amenities_count,other_app_count,outdoor_pool_count,pcln_guest_rating_count,pcln_guest_rating_total_x10,pets_allowed_count,price_count,price_total_x100,restaurant_count,rtl_count,saturday_count,sopq_count,spa_count,star_rating_total_x10,total_count,ttl(total_count),writetime(total_count)
spark.migrate.diff.select.types                                 0,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2
spark.migrate.query.cols.id                                     customer_key, year, month, day, summary_type
spark.migrate.query.cols.id.types                               0,1,1,1,0
spark.migrate.query.cols.partitionKey                           customer_key, year

spark.migrate.query.cols.insert
spark.migrate.query.cols.insert.types                           2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,1,1,0

spark.migrate.source.counterTable                               true
spark.migrate.source.counterTable.update.cql                    update clair.cust_stats set air_shuttle_count+=?, android_app_count+=?, bkg_guest_rating_count+=?, bkg_guest_rating_total_x10+=?, brand_count+=?, business_center_count+=?, casino_count+=?, contribution_usd_x100+=?, desktop_count+=?, fitness_count+=?, free_bkft_count+=?, free_internet_count+=?, free_intr_in_room_count+=?, free_intr_pub_count+=?, free_parking_count+=?, friday_count+=?, gym_count+=?, handicap_fac_count+=?, holiday_count+=?, indoor_pool_count+=?, ios_app_count+=?, mweb_count+=?, non_smoking_count+=?, num_rooms_total+=?, opq_count+=?, other_amenities_count+=?, other_app_count+=?, outdoor_pool_count+=?, pcln_guest_rating_count+=?, pcln_guest_rating_total_x10+=?, pets_allowed_count+=?, price_count+=?, price_total_x100+=?, restaurant_count+=?, rtl_count+=?, saturday_count+=?, sopq_count+=?, spa_count+=?, star_rating_total_x10+=?, total_count+=? where customer_key=? and year=? and  month=? and  day=? and  summary_type=?  
spark.migrate.source.counterTable.update.max.counter.index      39
spark.migrate.source.counterTable.update.select.index           5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,0,1,2,3,4


spark.migrate.preserveTTLWriteTime                              false
spark.migrate.source.ttl.cols                                   45
spark.migrate.source.writeTimeStampFilter.cols                  46


spark.migrate.source.writeTimeStampFilter                       0



/*
0: String

1: Integer

2: Long
3: Double
4: Instant (datetime)
5: Map (separate type by %) - Example: 5%0%1 (Map<String,Integer>)
6: List (separate type by %) - Example: 5%1 (List<Long>)
7: ByteBuffer (Blob)

*/
